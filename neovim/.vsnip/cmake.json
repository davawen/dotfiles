{
	"Cmake Boilerplate": {
		"prefix": "cmake-template",
		"body": [
			
			"cmake_minimum_required(VERSION 3.12...3.21)",
			"",
			"# Flags / Options",
			"if(NOT CMAKE_BUILD_TYPE)",
			"\tset(CMAKE_BUILD_TYPE Debug)",
			"endif()",
			"",
			"set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
			"",
			"set(CMAKE_CXX_STANDARD ${2:17})",
			"set(CMAKE_CXX_STANDARD_REQUIRED ON)",
			"",
			"set(CMAKE_CXX_FLAGS_DEBUG \"-g\")",
			"set(CMAKE_CXX_FLAGS_RELEASE \"-O3\")",
			"",
			"set(PROJECT_NAME \"$1\")",
			"",
			"",
			"project(${PROJECT_NAME} VERSION ${3:1.0} LANGUAGES CXX)",
			"",
			"# Add source files",
			"file(GLOB_RECURSE SOURCE_FILES ",
			"\t${CMAKE_SOURCE_DIR}/src/*.c",
			"\t${CMAKE_SOURCE_DIR}/src/*.cpp)",
			"",
			"# Add header files",
			"file(GLOB_RECURSE HEADER_FILES ",
			"\t${CMAKE_SOURCE_DIR}/include/*.h",
			"\t${CMAKE_SOURCE_DIR}/include/*.hpp)",
			"",
			"add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES})",
			"",
			"# Headers",
			"",
			"# Libraries",
			"",
			"",
			"# Compilation",
			"",
			"target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17)",
			"",
			"if(CMAKE_SYSTEM_NAME STREQUAL \"Windows\")",
			"target_compile_options(${PROJECT_NAME} PRIVATE /W4)",
			"elseif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")",
			"target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -Wpedantic -Wno-unknown-pragmas)",
			"elseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")",
			"\ttarget_compile_options(${PROJECT_NAME} PRIVATE)",
			"endif()"
		],
		"description": "A CMake file for traditional use"
	},
	"Cmake SFML Package": {
		"prefix": "sfml-package",
		"body": [
			"find_package(SFML 2.5 COMPONENTS system window graphics network audio REQUIRED)",
			"target_include_directories(${PROJECT_NAME} PRIVATE ./include)",
			"target_include_directories(${PROJECT_NAME} PRIVATE ${SFML_INCLUDE_DIRS})",
			"target_link_libraries(${PROJECT_NAME} PRIVATE sfml-system sfml-window sfml-graphics sfml-network sfml-audio)"
		],
		"description": "Adds needed SFML definitions"
}
